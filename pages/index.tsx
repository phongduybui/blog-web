import type { GetStaticProps } from 'next';
import Head from 'next/head';
import PrimaryContent from '../components/PrimaryContent';
import { fetcher, request } from '../services/request';
import { Article, Author } from './articles/[slug]';
import useSWR from 'swr';
import { useState } from 'react';
import { queryArticles } from '../constants/queries';

export interface Category {
  id: number;
  attributes: {
    name: string;
    slug: string;
    createdAt: string;
    updatedAt: string;
  };
}

export interface Data<T> {
  data: T;
  meta: {
    pagination: {
      page: number;
      pageCount: number;
      pageSize: number;
      total: number;
    };
  };
}
interface Props {
  articles: Data<Article[]>;
  categories: Data<Category[]>;
  author: Author;
}

const Home = ({ articles, categories, author }: Props) => {
  const [page, setPage] = useState(1);
  const query = queryArticles({ page });

  const { data: articlesData } = useSWR<Data<Article[]>>(
    `/articles?${query}`,
    fetcher,
    {
      fallbackData: articles,
    }
  );
  const { data: categoriesData } = useSWR<Data<Category[]>>(
    '/categories',
    fetcher,
    {
      fallbackData: categories,
    }
  );

  const onPageChange = (newPage: number) => {
    setPage(newPage);
  };

  return (
    <div>
      <Head>
        <title>Anne Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PrimaryContent
        articlesData={articlesData}
        categoriesData={categoriesData}
        author={author}
        onPageChange={onPageChange}
        page={page}
      />
    </div>
  );
};

export const getStaticProps: GetStaticProps = async () => {
  try {
    const query = queryArticles({ page: 1 });
    const { data: articles } = await request.get(`/articles?${query}`);
    const { data: categories } = await request.get('/categories');
    const { data: author } = await request.get('/writers/1');
    return {
      props: {
        articles,
        categories,
        author,
      },
      revalidate: 10,
    };
  } catch (e) {
    return {
      props: {},
    };
  }
};

export default Home;
